[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "compliance-ai-services"
version = "1.0.0"
description = "AI-powered regulatory intelligence and risk assessment services"
authors = [
    {name = "Compliance Platform Team", email = "team@compliance-platform.com"}
]
readme = "README.md"
license = {text = "Proprietary"}
requires-python = ">=3.9"
keywords = ["ai", "ml", "compliance", "regulatory", "risk-assessment", "nlp"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Financial and Insurance Industry",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scikit-learn>=1.3.0",
    "tensorflow>=2.13.0",
    "torch>=2.0.0",
    "transformers>=4.33.0",
    "spacy>=3.6.0",
    "nltk>=3.8.0",
    "fastapi>=0.103.0",
    "uvicorn>=0.23.0",
    "pydantic>=2.3.0",
    "psycopg2-binary>=2.9.0",
    "pymongo>=4.5.0",
    "redis>=4.6.0",
    "elasticsearch>=8.9.0",
    "beautifulsoup4>=4.12.0",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "loguru>=0.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.7.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "jupyter>=1.0.0",
]

ml = [
    "xgboost>=1.7.0",
    "lightgbm>=4.0.0",
    "catboost>=1.2.0",
    "statsmodels>=0.14.0",
    "prophet>=1.1.0",
    "mlflow>=2.6.0",
]

nlp = [
    "sentence-transformers>=2.2.0",
    "textblob>=0.17.0",
    "gensim>=4.3.0",
    "wordcloud>=1.9.0",
]

viz = [
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
    "bokeh>=3.2.0",
]

[project.urls]
Homepage = "https://github.com/compliance-platform/ai-services"
Documentation = "https://docs.compliance-platform.com/ai-services"
Repository = "https://github.com/compliance-platform/ai-services"
Issues = "https://github.com/compliance-platform/ai-services/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.json", "*.yaml", "*.yml", "*.txt", "*.md"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["compliance_ai"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "spacy.*",
    "nltk.*",
    "sklearn.*",
    "tensorflow.*",
    "torch.*",
    "transformers.*",
    "pymongo.*",
    "elasticsearch.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "ml: marks tests as machine learning tests",
    "nlp: marks tests as NLP tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
