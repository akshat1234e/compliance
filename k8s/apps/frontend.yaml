apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: rbi-compliance
  labels:
    app: frontend
    component: ui
    version: v1.0.0
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        component: ui
        version: v1.0.0
    spec:
      serviceAccountName: rbi-compliance-sa
      imagePullSecrets:
      - name: docker-registry-secret
      containers:
      - name: frontend
        image: rbi-compliance/frontend:1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3001
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: rbi-compliance-config
              key: NODE_ENV
        - name: PORT
          value: "3001"
        - name: NEXT_PUBLIC_API_URL
          value: "https://rbi-compliance.com/api"
        - name: NEXT_PUBLIC_AUTH_URL
          value: "https://rbi-compliance.com/auth"
        - name: NEXT_PUBLIC_APP_NAME
          value: "RBI Compliance Platform"
        - name: NEXT_PUBLIC_APP_VERSION
          value: "1.0.0"
        - name: NEXT_PUBLIC_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: rbi-compliance-config
              key: NODE_ENV
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: logs
          mountPath: /var/log/nginx
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 101
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: logs
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - frontend
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: rbi-compliance
  labels:
    app: frontend
    component: ui
spec:
  type: ClusterIP
  ports:
  - port: 3001
    targetPort: 3001
    protocol: TCP
    name: http
  selector:
    app: frontend

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: frontend-hpa
  namespace: rbi-compliance
  labels:
    app: frontend
    component: autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: frontend-pdb
  namespace: rbi-compliance
  labels:
    app: frontend
    component: availability
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: frontend

---
# Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: frontend-netpol
  namespace: rbi-compliance
  labels:
    app: frontend
    component: security
spec:
  podSelector:
    matchLabels:
      app: frontend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: nginx
    ports:
    - protocol: TCP
      port: 3001
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: integration-gateway
    ports:
    - protocol: TCP
      port: 3000
  - to:
    - podSelector:
        matchLabels:
          app: auth-service
    ports:
    - protocol: TCP
      port: 3001
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80

---
# ConfigMap for frontend environment variables
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
  namespace: rbi-compliance
  labels:
    app: frontend
    component: config
data:
  # Frontend-specific configuration
  NEXT_PUBLIC_API_TIMEOUT: "30000"
  NEXT_PUBLIC_ENABLE_ANALYTICS: "true"
  NEXT_PUBLIC_ENABLE_ERROR_REPORTING: "true"
  NEXT_PUBLIC_MAX_FILE_SIZE: "10485760"
  NEXT_PUBLIC_SUPPORTED_LANGUAGES: "en,hi"
  NEXT_PUBLIC_DEFAULT_LANGUAGE: "en"
  NEXT_PUBLIC_THEME: "light"
  NEXT_PUBLIC_ENABLE_PWA: "true"
  
  # Feature flags
  NEXT_PUBLIC_FEATURE_REGULATORY_MANAGEMENT: "true"
  NEXT_PUBLIC_FEATURE_ADVANCED_ANALYTICS: "true"
  NEXT_PUBLIC_FEATURE_MOBILE_APP: "false"
  NEXT_PUBLIC_FEATURE_DARK_MODE: "true"
  
  # External service URLs
  NEXT_PUBLIC_DOCUMENTATION_URL: "https://docs.rbi-compliance.com"
  NEXT_PUBLIC_SUPPORT_URL: "https://support.rbi-compliance.com"
  NEXT_PUBLIC_STATUS_URL: "https://status.rbi-compliance.com"
